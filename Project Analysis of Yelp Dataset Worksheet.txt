
Name: Surya Kumar Yadav

Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera.


Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the 
tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	
Sample code: #Count of primary key from each table
select count(id) as total_record
from user;

Output:

+--------------+
| total_record |
+--------------+
|        10000 |
+--------------+


2. Find the total distinct records by either the foreign key or primary key 
for each table. If two foreign keys are listed in the table, please specify 
which foreign key.

Table                 Key                  Distinct_Record
i. Business =        id                    10000
ii. Hours =          business_id           1562
iii. Category =      business_id           2643
iv. Attribute =      business_id           1115
v. Review =          id, business_id, user_id   10000, 8090, 9581
vi. Checkin =        business_id                493         
vii. Photo =         id, business_id	      10000, 4693
viii. Tip =          business_id, user_id       3979, 537
ix. User =           id                    10000
x. Friend =          user_id                    11
xi. Elite_years =    user_id                    2780

Sample Code: # A FOREIGN KEY is a field which refers to the PRIMARY KEY. 
Example like business_id and user_id is a foreign key in the Review table.
select COUNT (distinct id) from business;
select COUNT (distinct business_id) from hours;
select COUNT (distinct business_id) from Category;
select COUNT (distinct business_id) from Attribute;
select COUNT (distinct id), COUNT (distinct business_id), COUNT (distinct user_id
) from review;
select COUNT (distinct business_id) from Checkin;
select COUNT (distinct id), COUNT (distinct business_id) from photo;
select COUNT (distinct business_id), COUNT (distinct user_id) from tip;
select COUNT (distinct id) from User;
select COUNT (distinct user_id) from Friend;
select COUNT (distinct user_id) from Elite_years;






3. Are there any columns with null values in the Users table? Indicate "yes," 
or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:

select COUNT(*) from user
where id is NULL or
name is NULL or
review_count is NULL or
yelping_since is NULL or
useful is NULL or
funny is NULL or
cool is NULL or
fans is NULL or
average_stars is NULL or
compliment_hot is NULL or
compliment_more is NULL or
compliment_profile is NULL or
compliment_cute is NULL or
compliment_list is NULL or
compliment_note is NULL or
compliment_plain is NULL or
compliment_cool is NULL or
compliment_funny is NULL or
compliment_writer is NULL or
compliment_photos is NULL;
OUTPUT:
+----------+
| COUNT(*) |
+----------+
|        0 |
+----------+

	
	

	
4. For each table and column listed below, display the smallest (minimum), 
largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7082
	
Sample Code: select min(stars), max(stars), avg(stars) from Review;

	
	ii. Table: Business, Column: Stars
	
		min:	1	max:	5	avg: 3.6549

Sample Code: select min(stars), max(stars), avg(stars) from Business;
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144

Sample Code: select min(likes), max(likes), avg(likes) from Tip;
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414

Sample Code: select min(count), max(count), avg(count) from Checkin;
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995

Sample Code: 
select min(review_count), max(review_count), avg(review_count) from User;

		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
select city, sum(review_count) as reviews 
from business
group by 1
order by reviews desc;

	
	
	Copy and Paste the Result Below:
	
+-----------------+---------+
| city            | reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montréal        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following 
cities:

i. Avon

SQL code used to arrive at answer:
select stars,sum(review_count) 
from business
where city = 'Avon'
group by 1;



Copy and Paste the Resulting Table Below (2 columns â€" star rating and 
count):
+-------+-------------------+
| stars | sum(review_count) |
+-------+-------------------+
|   1.5 |                10 |
|   2.5 |                 6 |
|   3.5 |                88 |
|   4.0 |                21 |
|   4.5 |                31 |
|   5.0 |                 3 |
+-------+-------------------+


ii. Beachwood

SQL code used to arrive at answer:
select stars,sum(review_count) 
from business
where city = 'Beachwood'
group by 1;



Copy and Paste the Resulting Table Below (2 columns â€" star rating and 
count):
+-------+-------------------+
| stars | sum(review_count) |
+-------+-------------------+
|   2.0 |                 8 |
|   2.5 |                 3 |
|   3.0 |                11 |
|   3.5 |                 6 |
|   4.0 |                69 |
|   4.5 |                17 |
|   5.0 |                23 |
+-------+-------------------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
select name, review_count
from user
order by review_count Desc
limit 3;
	
		
	Copy and Paste the Result Below:
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+
		


8. Does posing more reviews correlate with more fans?

Ans: No, posing more reviews do not correlate with more fans.
	
Sample Code: 
select name, review_count, fans
from user
order by fans Desc;

Output:
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
| Mark      |          861 |  115 |
| Tiffany   |          408 |  111 |
| bernice   |          255 |  105 |
| Roanna    |         1039 |  104 |
| Angela    |          694 |  101 |
| .Hon      |         1246 |  101 |
| Ben       |          307 |   96 |
| Linda     |          584 |   89 |
| Christina |          842 |   85 |
| Jessica   |          220 |   84 |
| Greg      |          408 |   81 |
| Nieves    |          178 |   80 |
| Sui       |          754 |   78 |
| Yuri      |         1339 |   76 |
| Nicole    |          161 |   73 |
+-----------+--------------+------+

	
9. Are there more reviews with the word "love" or with the word "hate" in 
them?

	Answer: There are more reviews with the word "Love" than "Hate".

	
	SQL code used to arrive at answer: 
select count(text) as hatecount
from review
where text like '%hate%';

+-----------+
| hatecount |
+-----------+
|       232 |
+-----------+

select count(text) as lovecount
from review
where text like '%love%';

+-----------+
| lovecount |
+-----------+
|      1780 |
+-----------+



	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
select id,name,fans
from user
order by fans desc
limit 10;

	
	
	Copy and Paste the Result Below:
+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that 
city or category by their overall star rating. Compare the businesses with 2-
3 stars to the businesses with 4-5 stars and answer the following questions. 
Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of 
hours?

>	Yes, they do have different distribution hours. For example, the restaurant category in 
the Phoenix city, the one with 4-5 star ratings operates for longer hours than the one 
with 2-3 star ratings.

ii. Do the two groups you chose to analyze have a different number of 
reviews?
         
>	Yes, they have different number of reviews.

iii. Are you able to infer anything from the location data provided between 
these two groups? Explain.

>	No, I am not able to infer anything from the location data because both groups had 
different postal codes.

SQL code used for analysis:

select B.city, C.category,B.stars,B.name,H.hours,B.postal_code,
Case WHEN stars BETWEEN 2 AND 3 THEN '2-3 stars' 
WHEN stars BETWEEN 4 AND 5 THEN '4-5 stars' 
END as Rating,
B.review_count as reviews
from business B 
inner join hours H on B.id = H.business_id
inner join category C on C.business_id = B.id
Where city = 'Phoenix' and category = 'Restaurants' and 
rating in ('2-3 stars','4-5 stars')
group by name
order by stars desc;

		
		
2. Group business based on the ones that are open and the ones that are 
closed. What differences can you find between the ones that are still open 
and the ones that are closed? List at least two differences and the SQL code 
you used to arrive at your answer.
		
i. Difference 1:
>	The average review count of open business is almost 9 points more than the closed 
business.
         
ii. Difference 2:
>	The number of distinct business_id of open business is almost 5 times more than the 
closed business.
        
         

SQL code used for analysis:



select count(distinct city), count(distinct id), avg(review_count), avg(stars), i
s_open
from business
group by is_open;

	
	
3. For this last part of your analysis, you are going to choose the type of 
analysis you want to conduct on the Yelp dataset and are going to prepare the 
data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for 
sentiment analysis, clustering businesses to find commonalities or anomalies 
between them, predicting the overall star rating for a business, predicting 
the number of fans a user will have, and so on. These are just a few examples 
to get you started, so feel free to be creative and come up with your own 
problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
>	I choose to analyze the top 10 users who has given the positive reviews 
and the max star rating.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your 
analysis and why you chose that data:
>	I used two tables user and review for my analysis.
>	I choose the top 10 users name and their review count on the basis of 
highest ratings to find the true users.
>	I took variables like name, max review_count and max star ratings then 
connect the both tables and group by the distinct name and order by the 
stars rating in desc order.
>	I wanted to know the top 10 user name who has given max review and 
given the highest rating.
                  
iii. Output of your finished dataset:

# As per conclusion below the top 10 users has given the maximum reviews but 
not given any ratings.

    +-----------+---------+---------+
| name      | reviews | ratings |
+-----------+---------+---------+
| Gerald    |    2000 |    None |
| Sara      |    1629 |    None |
| Yuri      |    1339 |    None |
| .Hon      |    1246 |    None |
| William   |    1215 |    None |
| Harald    |    1153 |    None |
| eric      |    1116 |    None |
| Roanna    |    1039 |    None |
| Mimi      |     968 |    None |
| Christine |     930 |    None |
+-----------+---------+---------+     
         
iv. Provide the SQL code you used to create your final dataset:

select U.name, max(U.review_count) as reviews, max(R.stars) as ratings
from user U 
Left join Review R on R.id = U.id
group by U.name
order by reviews desc
Limit 10;

